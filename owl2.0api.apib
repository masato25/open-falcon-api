## API - Auth Register [/api/v1/auth/register?name={name}&password={password}&repeat_password={repeat_password}&email={emil}]

### Regist User [POST]

Example:
```
name = "acct"
password = "passwd"
repeat_password = "passwd"
email = "acct@owl.com"
```

+ Parameters
  + name (string) - account name
  + password (string)
  + repeat_password (string)
  + email (string)

+ Response 200 (application/json)

        {
          "version": "v1",
          "method": "POST",
          "status": "success",
          "data": {
            "name": "acct",
            "expired": 1458815516,
            "sig": "a9de7114da1811e5adb7001500c6ca5a"
          }
        }

## API - Auth Login [/api/v1/auth/login?name={name}&password={password}]

### Login Account [POST]
Example:
```
name = "acct"
password = "passwd"
```

+ Parameters
  + name (string) - account name
  + password (string)

+ Response 200 (application/json)

        {
          "version": "v1",
          "method": "POST",
          "status": "success",
          "data": {
            "name": "acct",
            "expired": 1458815516,
            "sig": "a9de7114da1811e5adb7001500c6ca5a"
          }
        }

## API - Auth Login [/api/v1/auth/sessioncheck?cName={cName}&cSig={cSig}]

### Sessioncheck Check. [POST]
Example:
```
cName = "acct"
cSig = "a9de7114da1811e5adb7001500c6ca5a"
```

+ Parameters
  + cName (string) - account name
  + cSig (string) - sig key got during login

+ Response 200 (application/json)

        {
          "version": "v1",
          "method": "POST",
          "status": "success",
          "data": {
            "expired": 1458815516,
            "message": "session passed!",
            "sig": "a9de7114da1811e5adb7001500c6ca5a"
          }
        }

## API - Auth Logout [/api/v1/auth/logout?cName={cName}&cSig={cSig}]

### User Logout. [POST]
Example:
```
cName = "acct"
cSig = "a9de7114da1811e5adb7001500c6ca5a"
```

+ Parameters
  + cName (string) - account name
  + cSig (string) - sig key got during login

+ Response 200 (application/json)

        {
          "version": "v1",
          "method": "POST",
          "status": "success",
          "data": {
            "message": "session is removed"
          }
        }

## API - Get User Info  [/api/v1/auth/user?cName={cName}&cSig={cSig}]

### User Logout. [POST]
Example:
```
cName = "acct"
cSig = "a9de7114da1811e5adb7001500c6ca5a"
```

+ Parameters
  + cName (string) - account name
  + cSig (string) - sig key got during login

+ Response 200 (application/json)

        {
          "version": "v1",
          "method": "POST",
          "status": "success",
          "data": {
            "email": "test@cepave.com",
            "name": "cepavetest"
          }
        }

## API - Update User Info  [/api/v1/auth/user/update?cName={cName}&cSig={cSig}&email={email}&password={password}]

### User Logout. [POST]
Example:
```
cName = "acct"
cSig = "a9de7114da1811e5adb7001500c6ca5a"
email = "acct@owl.com"
password = "passwd"
```

+ Parameters
  + cName (string) - account name
  + cSig (string) - sig key got during login
  + email
  + password

+ Response 200 (application/json)

        {
          "version": "v1",
          "method": "POST",
          "status": "success",
          "data": {
            "email": "test@cepave.com",
            "name": "cepavetest"
          }
        }

## API - Endpoints Query  [/api/v1/dashboard/endpoints?cName={cName}&cSig={cSig}&queryStr={queryStr}]

### Endpoints Query. [POST]
Example:
```
cName = "acct"
cSig = "a9de7114da1811e5adb7001500c6ca5a"
queryStr = ".+"
```

+ Parameters
  + cName (string) - account name
  + cSig (string) - sig key got during login
  + queryStr - regex query string of endpoints

+ Response 200 (application/json)

        {
          "version": "v1",
          "method": "POST",
          "status": "success",
          "data": {
            "endpoints": [
               {
                 "id": 0,
                 "endpoint": "docker-task",
                 "ts": 1456330140
               },
               {
                 "id": 0,
                 "endpoint": "docker-agent",
                 "ts": 1456330080
               },
               {
                 "id": 0,
                 "endpoint": "10.0.0.167",
                 "ts": 1456330140
               }
             ]
          }

## API - Counter Query  [/api/v1/dashboard/endpointcounters?cName={cName}&cSig={cSig}&endpoints={endpoints}]

### Counter Query. [POST]

Example
```
cName = "acct"
cSig = "a9de7114da1811e5adb7001500c6ca5a"
endpoints = "[\"docker-agent\",\"testmachine\"]"
```

+ Parameters
  + endpoints (string) - array of endpoints

+ Response 200 (application/json)

        {
          "version": "v1",
          "method": "POST",
          "status": "success",
          "data": {
            "counters": [
               "agent.alive",
               "cpu.guest",
               "cpu.idle",
               "cpu.iowait",
               "cpu.irq",
               "cpu.nice",
               "cpu.softirq",
               "cpu.steal",
               "cpu.switches",
               "cpu.system",
               "cpu.user"
             ]
          }

## API - HostGroup Query  [/api/v1//hostgroup/query?cName={cName}&cSig={cSig}&queryStr={queryStr}]

### HostGroup Query. [POST]
Example:

```
cName = "acct"
cSig = "a9de7114da1811e5adb7001500c6ca5a"
queryStr = ".+"
```

+ Parameters
  + queryStr - regex query string of hostgroup

+ Response 200 (application/json)

        {
          "version": "v1",
          "method": "POST",
          "status": "success",
          "data": {
            "hostgroups": [
              {
                "id": 2,
                "grp_name": "docker",
                "create_user": "acct",
                "create_at": "2016-03-07T13:41:52+08:00",
                "come_from": 1
              }
            ]
          }

## API - Get Endpoint list of HostGroups  [/api/v1//hostgroup/hosts?cName={cName}&cSig={cSig}&queryStr={queryStr}]

### Get Endpoint list of HostGroups. [POST]

Example:
```
cName = "acct"
cSig = "a9de7114da1811e5adb7001500c6ca5a"
queryStr =  ".+"
```

+ Parameters
  + queryStr - regex query string of hostgroups

+ Response 200 (application/json)
        {
          "version": "v1",
          "method": "POST",
          "status": "success",
          "data": {
            "hosts": [
              {
                "id": 1,
                "hostname": "docker-agent",
                "ip": "127.0.0.1",
                "agent_version": "5.1.0",
                "plugin_version": "plugin not enabled",
                "maintain_begin": 0,
                "maintain_end": 0,
                "update_at": "2016-01-04T16:43:37+08:00"
              },
              {
                "id": 28988,
                "hostname": "docker-task",
                "ip": "",
                "agent_version": "",
                "plugin_version": "",
                "maintain_begin": 0,
                "maintain_end": 0,
                "update_at": "2016-03-07T13:41:21+08:00"
              }
            ]
          }
        }

## API - Get Counter list of HostGroups  [/api/v1//hostgroup/hostgroupscounters?cName={cName}&cSig={cSig}&hostgroups={hostgroups}]

### Get Counter list of HostGroups. [POST]
Example:
```
cName = "acct"
cSig = "a9de7114da1811e5adb7001500c6ca5a"
hostgroups =  ["docker","testgroup"]
```

+ Parameters
  + hostgroups - array of hostgroups

+ Response 200 (application/json)
        {
          "version": "v1",
          "method": "POST",
          "status": "success",
          "data": {
              "counters": [
                "falcon.task.alive",
                "agent.alive",
                "cpu.guest",
                "cpu.idle",
                "cpu.iowait",
                "cpu.irq",
                "cpu.nice",
                "cpu.softirq",
                "cpu.steal",
                "cpu.switches",
                "cpu.system",
                "cpu.user",
                "df.bytes.free.percent/fstype=ext4,mount=/config",
                "df.inodes.free.percent/fstype=ext4,mount=/config",
                "df.statistics.total",
                "df.statistics.used"
              ]
            }
          }
        }

## API - Get Alarm List  [/api/v1/portal/events/get?cName={cName}&cSig={cSig}&startTime={startTime}&endTime={endTime}&priority={priority}&status={status}]

### Get Get Alarm List. [POST]
Example:
```
cName = "acct"
cSig = "a9de7114da1811e5adb7001500c6ca5a"
startTime = 1457450919
endTime = 1458450919
# -1 means no specific any priority level, get all.
priority = 0
#"ALL" means no specific any status, get all.
status = "PORBLEM"
```

+ Parameters
  + startTime (timestamp)
  + endTime (timestamp)
  + priority (int) - alarm level
  + status - status of alarm

+ Response 200 (application/json)
        {
          "version": "v1",
          "method": "POST",
          "status": "success",
          "data": {
            "events": [
              {
                "id": "s_1_b66b973ef551e4e503fad475dfc9e418",
                "endpoint": "docker-agent",
                "metric": "cpu.idle",
                "func": "all(#1)",
                "cond": "97.91666666666667 != 0",
                "note": "",
                "max_step": 30000,
                "current_step": 28,
                "priority": 0,
                "status": "PROBLEM",
                "timestamp": "2016-03-09T21:42:00+08:00",
                "update_at": "2016-03-09T23:37:00+08:00",
                "closed_at": "0001-01-01T00:00:00Z",
                "user_modified": "",
                "expression_id": 0,
                "strategy_id": 1,
                "template_id": 1
              },
              {
                "id": "s_2_f0b61e6805e88bd507c6a48ebe43aea6",
                "endpoint": "docker-agent",
                "metric": "cpu.nice",
                "func": "all(#1)",
                "cond": "0 == 0",
                "note": "",
                "max_step": 30000,
                "current_step": 28,
                "priority": 0,
                "status": "PROBLEM",
                "timestamp": "2016-03-09T21:42:00+08:00",
                "update_at": "2016-03-09T23:37:00+08:00",
                "closed_at": "0001-01-01T00:00:00Z",
                "user_modified": "",
                "expression_id": 0,
                "strategy_id": 2,
                "template_id": 1
              }
            ]
          }
        }

## API - Close Alarm Case  [/api/v1/portal/events/close?cName={cName}&cSig={cSig}&id={id}]

### Get Close Alarm Case. [POST]
Example:
```
cName = "acct"
cSig = "a9de7114da1811e5adb7001500c6ca5a"
id = "s_2_f0b61e6805e88bd507c6a48ebe43aea6"
```

+ Parameters
  + id (string) - id of alarm case

+ Response 200 (application/json)
        {
          "version": "v1",
          "method": "PUT",
          "status": "success"
        }
